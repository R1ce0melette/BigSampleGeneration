'solc --version' running
'solc contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/runner/work/BigSampleGeneration/BigSampleGeneration/contracts/iter5 - Claude4.5/prompt_22' running
INFO:Detectors:
Reentrancy in TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98):
	External calls:
	- (success,None) = address(recipients[i]).call{value: airdrop.amountPerAddress}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#92)
	State variables written after the call(s):
	- airdrop.distributedAmount += airdrop.amountPerAddress (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#90)
	TokenAirdrop.airdrops (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#17) can be used in cross function reentrancies:
	- TokenAirdrop.airdrops (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#17)
	- TokenAirdrop.cancelAirdrop(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#100-109)
	- TokenAirdrop.claim(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#61-77)
	- TokenAirdrop.createAirdrop(address[],uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#35-59)
	- TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98)
	- TokenAirdrop.getAirdropInfo(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#135-155)
	- hasClaimed[_airdropId][recipients[i]] = true (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#89)
	TokenAirdrop.hasClaimed (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#18) can be used in cross function reentrancies:
	- TokenAirdrop.claim(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#61-77)
	- TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98)
	- TokenAirdrop.hasClaimed (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#18)
	- TokenAirdrop.hasUserClaimed(uint256,address) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#125-128)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98) has external calls inside a loop: (success,None) = address(recipients[i]).call{value: airdrop.amountPerAddress}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#92)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in TokenAirdrop.claim(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#61-77):
	External calls:
	- (success,None) = address(msg.sender).call{value: airdrop.amountPerAddress}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#73)
	Event emitted after the call(s):
	- TokensClaimed(_airdropId,msg.sender,airdrop.amountPerAddress) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#76)
Reentrancy in TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98):
	External calls:
	- (success,None) = address(recipients[i]).call{value: airdrop.amountPerAddress}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#92)
	Event emitted after the call(s):
	- TokensClaimed(_airdropId,recipients[i],airdrop.amountPerAddress) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#95)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
TokenAirdrop.claim(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#61-77) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(airdrop.isActive,Airdrop is not active) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#66)
TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(airdrop.isActive,Airdrop is not active) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#83)
TokenAirdrop.cancelAirdrop(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#100-109) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(airdrop.isActive,Airdrop is already cancelled) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#104)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in TokenAirdrop.claim(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#61-77):
	- (success,None) = address(msg.sender).call{value: airdrop.amountPerAddress}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#73)
Low level call in TokenAirdrop.distributeAll(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79-98):
	- (success,None) = address(recipients[i]).call{value: airdrop.amountPerAddress}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#92)
Low level call in TokenAirdrop.withdrawFunds(uint256) (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#162-168):
	- (success,None) = address(owner).call{value: _amount}() (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#166)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter TokenAirdrop.createAirdrop(address[],uint256)._recipients (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#35) is not in mixedCase
Parameter TokenAirdrop.createAirdrop(address[],uint256)._amountPerAddress (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#35) is not in mixedCase
Parameter TokenAirdrop.claim(uint256)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#61) is not in mixedCase
Parameter TokenAirdrop.distributeAll(uint256)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#79) is not in mixedCase
Parameter TokenAirdrop.cancelAirdrop(uint256)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#100) is not in mixedCase
Parameter TokenAirdrop.isRecipient(uint256,address)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#111) is not in mixedCase
Parameter TokenAirdrop.isRecipient(uint256,address)._address (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#111) is not in mixedCase
Parameter TokenAirdrop.hasUserClaimed(uint256,address)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#125) is not in mixedCase
Parameter TokenAirdrop.hasUserClaimed(uint256,address)._user (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#125) is not in mixedCase
Parameter TokenAirdrop.getAirdropRecipients(uint256)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#130) is not in mixedCase
Parameter TokenAirdrop.getAirdropInfo(uint256)._airdropId (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#135) is not in mixedCase
Parameter TokenAirdrop.withdrawFunds(uint256)._amount (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#162) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
TokenAirdrop.owner (contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol#5) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:contracts/iter5 - Claude4.5/prompt_22/TokenAirdrop.sol analyzed (1 contracts with 100 detectors), 24 result(s) found
